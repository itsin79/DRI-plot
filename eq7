import math

# تعریف مقادیر اولیه
π = math.pi

# تعریف توابع
def dQgs_dZ(d, NFe, Tg, Ts):
    return 24 * (π * d**2 / NFe) * (Tg - Ts)

def dN_dZ(e, D, d):
    return 6 * (1 - e) * D**2 / d**3

def dQl_dZ(π, D, xL, Tg, To, NFe):
    return (24 * π * D * xL * (Tg - To)) / NFe

def Hg(n, cp_i, dT):
    return n * sum(g * cp_i * dT)

def Hs(F1, F2, cp_Fe2O3, cp_Fe, fb, O_Fe_in):
    term1 = (1 - F1) / 2 * cp_Fe2O3
    term2 = ((F1 - F2) / 0.925) * cp_Fe2O3
    term3 = F2 * cp_Fe
    term4 = (1 / fb - 1) - (1 / 3.5 * (O_Fe_in ** -1))
    term5 = 56 * cp_Fe2O3
    return term1 + term2 + term3 + term4 * term5

def dTg_dZ(Hg, dQgs_dZ, dQl_dZ):
    return 1 / Hg * (dQgs_dZ + dQl_dZ)

def dTs_dZ(Hs, dQgs_dZ, sd_dHR_dZ):
    return 1 / Hs * (dQgs_dZ - sd_dHR_dZ)

# تعریف مقادیر ورودی برای استفاده در توابع
d = 0  # مقدار واقعی را وارد کنید
NFe = 0  # مقدار واقعی را وارد کنید
Tg = 0  # مقدار واقعی را وارد کنید
Ts = 0  # مقدار واقعی را وارد کنید
e = 0  # مقدار واقعی را وارد کنید
D = 0  # مقدار واقعی را وارد کنید
xL = 0  # مقدار واقعی را وارد کنید
To = 0  # مقدار واقعی را وارد کنید
cp_i = 0  # مقدار واقعی را وارد کنید
dT = 0  # مقدار واقعی را وارد کنید
n = 0  # مقدار واقعی را وارد کنید
F1 = 0  # مقدار واقعی را وارد کنید
F2 = 0  # مقدار واقعی را وارد کنید
cp_Fe2O3 = 0  # مقدار واقعی را وارد کنید
cp_Fe = 0  # مقدار واقعی را وارد کنید
fb = 0  # مقدار واقعی را وارد کنید
O_Fe_in = 0  # مقدار واقعی را وارد کنید
sd_dHR_dZ = 0  # مقدار واقعی را وارد کنید

# محاسبه مقادیر
dQgs_dZ_value = dQgs_dZ(d, NFe, Tg, Ts)
dN_dZ_value = dN_dZ(e, D, d)
dQl_dZ_value = dQl_dZ(π, D, xL, Tg, To, NFe)
Hg_value = Hg(n, cp_i, dT)
Hs_value = Hs(F1, F2, cp_Fe2O3, cp_Fe, fb, O_Fe_in)
dTg_dZ_value = dTg_dZ(Hg_value, dQgs_dZ_value, dQl_dZ_value)
dTs_dZ_value = dTs_dZ(Hs_value, dQgs_dZ_value, sd_dHR_dZ)

# چاپ نتایج
print("dQgs/dZ:", dQgs_dZ_value)
print("dN/dZ:", dN_dZ_value)
print("dQl/dZ:", dQl_dZ_value)
print("Hg:", Hg_value)
print("Hs:", Hs_value)
print("dTg/dZ:", dTg_dZ_value)
print("dTs/dZ:", dTs_dZ_value)
